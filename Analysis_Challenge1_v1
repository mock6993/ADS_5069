library(readr)          # easier reading of flat files
library(readxl)         # easier reading of excel files
library(dplyr)          # data manipulation functions
library(tidyr)          # tools for tidy datasets
library(magrittr)       # ceci n'est pas un pipe
library(lubridate)      # easier manipulation of time objects
library(stringr)        # easier manipulation of strings
library(reshape2)       # a much more flexible reshaping for our purpose here
library(here)           # easy path location and setting
library(ggplot2)        # plot data

#read in gathered data
df = read_csv("/Users/melissamock/Documents/QMSS-GR5069_Spring2018-master/data_challenges/data/processed/AllViolenceData_171220.csv")

#create dataframe
df = data.frame(df)

#explore contents of dataframe
head(df)

# computes lethality indices as defined by Chevigny: dead/wounded
df$civilian_lethality <- df$civilian_dead / df$civilian_wounded

# computes an alternate measure of the difference between dead and wounded
df$civilian_lethality_diff <- df$civilian_dead - df$civilian_wounded

# computes new index
df$civilian_NewIndex <- (df$civilian_dead - df$civilian_wounded) / (df$civilian_dead + df$civilian_wounded)

# adds perfect lethality indicator for all
df$perfect_civilian_lethality = ifelse(is.infinite(df$civilian_lethality) , 1,0)
df$perfect_army_lethality = ifelse(is.infinite(df$army_lethality) , 1,0)
df$perfect_navy_lethality = ifelse(is.infinite(df$navy_lethality) , 1,0)
df$perfect_federal_police_lethality = ifelse(is.infinite(df$federal_police_lethality) , 1,0)

# adss category for civilians
df$civilian_category = ifelse(is.infinite(df$civilian_lethality), "perfect_lethality",
                  ifelse(is.nan(df$civilian_lethality), "no_dead_wounded",
                         ifelse(df$civilian_lethality == 0, "just_wounded",
                                "dead.wounded")))

#filter for perfect lethality for all events
civil_perf <- filter(df, perfect_civilian_lethality == 1)
army_perf <- filter(df, perfect_army_lethality == 1)
navy_perf <- filter(df, perfect_navy_lethality == 1)
police_perf <- filter(df, perfect_federal_police_lethality == 1)

#filter for perfect lethality for confrontations
con_civil_perf <- filter(civil_perf, source == "confrontations")
con_army_perf <- filter(army_perf, source == "confrontations")
con_navy_perf <- filter(navy_perf, source == "confrontations")
con_police_perf <- filter(police_perf, source == "confrontations")
confrontations <-filter(df, source == "confrontations")


#add all perfect lethalities and deaths
total_lethality = sum(civil_perf$civilian_dead) + sum(army_perf$perfect_army_lethality) +  sum(navy_perf$perfect_navy_lethality) + sum(police_perf$perfect_federal_police_lethality)
total_dead =  sum(df$civilian_dead) + sum(df$army_dead) +sum(df$navy_dead) + sum(df$federal_police_dead)


#calculate percentage of civilian, army, navy perfect lethality for all events
civilian_perfect_lethality_percent <- round((sum(civil_perf$civilian_dead) / sum(df$civilian_dead) * 100), digits=2)
army_perfect_lethality_percent <- round((sum(army_perf$perfect_army_lethality) / sum(df$army_dead) * 100), digits=2)
navy_perfect_lethality_percent <- round((sum(navy_perf$perfect_navy_lethality) / sum(df$navy_dead) * 100), digits=2)
police_perfect_lethality_percent <- round((sum(police_perf$perfect_federal_police_lethality) / sum(df$federal_police_dead) * 100), digits=2)
all_perfect_lethality_percent <- round((total_lethality / total_dead *100), digits=2)

#print 
civilian_perfect_lethality_percent
army_perfect_lethality_percent
navy_perfect_lethality_percent
police_perfect_lethality_percent 
all_perfect_lethality_percent

#add all perfect lethalities and deaths from confrontations
con_total_lethality = sum(con_civil_perf$civilian_dead) + sum(con_army_perf$perfect_army_lethality) +  sum(con_navy_perf$perfect_navy_lethality) + sum(con_police_perf$perfect_federal_police_lethality)
con_total_dead =  sum(confrontations$civilian_dead) + sum(confrontations$army_dead) +sum(confrontations$navy_dead) + sum(confrontations$federal_police_dead)

#calculate percentage of civilian perfect lethality for confrontations
con_civilian_perfect_lethality_percent <- round((sum(con_civil_perf$perfect_civilian_lethality) / sum(confrontations$civilian_dead) * 100), digits=2)
con_army_perfect_lethality_percent <- round((sum(con_army_perf$perfect_army_lethality) / sum(confrontations$army_dead) * 100), digits=2)
con_navy_perfect_lethality_percent <- round((sum(con_navy_perf$perfect_navy_lethality) / sum(confrontations$navy_dead) * 100), digits=2)
con_police_perfect_lethality_percent <- round((sum(con_police_perf$perfect_federal_police_lethality) / sum(confrontations$federal_police_dead) * 100), digits=2)
con_all_perfect_lethality_percent <- round((con_total_lethality / con_total_dead * 100), 2)


#print
con_civilian_perfect_lethality_percent
con_army_perfect_lethality_percent
con_navy_perfect_lethality_percent
con_police_perfect_lethality_percent
con_all_perfect_lethality_percent 

#plot
ggplot(data = confrontations) + 
  geom_point(mapping = aes(x = date, y = total_people_dead, color = category)) 
